cmake_minimum_required(VERSION 3.16)
project(ProjectAnnihilation)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED True)

set(CMAKE_TOOLCHAIN_FILE "E:/vcpkg/scripts/buildsystems/vcpkg.cmake" CACHE STRING "Vcpkg toolchain file")

file(GLOB_RECURSE SOURCES src/*.cpp src/*.h engine/*.cpp engine/*.h)

find_package(SDL3 REQUIRED)
find_package(SDL3_image REQUIRED)
find_package(TBB CONFIG REQUIRED)

add_executable(ProjectAnnihilation ${SOURCES})

target_link_libraries(ProjectAnnihilation PRIVATE SDL3::SDL3 SDL3_image::SDL3_image TBB::tbb)

set_target_properties(ProjectAnnihilation PROPERTIES
    VS_DEBUGGER_WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}"
)

add_custom_command(TARGET ProjectAnnihilation POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_directory ${CMAKE_SOURCE_DIR}/assets $<TARGET_FILE_DIR:ProjectAnnihilation>/assets
)

if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
    add_compile_options(-fdiagnostics-color=always)
endif()

set(CMAKE_VERBOSE_MAKEFILE ON)

if (CMAKE_CXX_COMPILER_ID MATCHES "GNU|Clang")
    add_compile_options(-fsanitize=address,undefined)
    add_link_options(-fsanitize=address,undefined)
endif()

add_compile_options(-Wall -Wextra -Wpedantic)
add_compile_options(-Werror)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

message(STATUS "CMake version: ${CMAKE_VERSION}")
message(STATUS "C++ compiler: ${CMAKE_CXX_COMPILER}")
message(STATUS "C++ flags: ${CMAKE_CXX_FLAGS}")
add_compile_definitions(DEBUG_BUILD)

# Enable additional debug symbols and error checks
set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -DDEBUG")

# Treat SDL deprecation warnings as errors for clarity
add_compile_definitions(SDL_ENABLE_ASSERTIONS=1)

# Include directories for SDL
include_directories(${SDL3_INCLUDE_DIRS} ${SDL3_IMAGE_INCLUDE_DIRS})

# Add dependency tracking for rebuilds
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

# Output compiler and linker info
message(STATUS "Compiler used: ${CMAKE_CXX_COMPILER}")
message(STATUS "Compiler version: ${CMAKE_CXX_COMPILER_VERSION}")
message(STATUS "Compile flags: ${CMAKE_CXX_FLAGS}")
message(STATUS "Linker flags: ${CMAKE_EXE_LINKER_FLAGS}")
